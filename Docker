Docker container vs Docker Image
Explanation with an example:

Consider you have a game (iso) image in your computer.

When you run (mount your image as a virtual drive), a virtual drive is created with all the game contents in the virtual drive and the game installation file is automatically launched. [Running your docker image - creating a container and then starting it.]

But when you stop (similar to docker stop) it, the virtual drive still exists but stopping all the processes. [As the container exists till it is not deleted]

And when you do start (similar to docker start), from the virtual drive the games files start its execution. [starting the existing container]

In this example - The game image is your Docker image and virtual drive is your container.

*********************
Docker run the image in detach mode with port:
 docker run -d -p 8080:8080 [imageId]
 
 Docker execute the container and edit:
 docker exec -it [containerId] sh
 Note that exec command works only on already running container. If the container is currently stopped, you need to first run it.
 
 *********************
 
docker pull alpine

wget https://download.oracle.com/otn-pub/java/jdk/8u191-b12/2787e4a523244c269598db4e85c51e0c/jdk-8u191-linux-x64.tar.gz --header "Referer: https://download.oracle.com"

apk add maven
mvn –version
java –version
Ubuntu:
apt-get update
 apt-get install wget

https://www.journaldev.com/wp-content/uploads/2018/05/Spring-Boot-REST.zip

1.	docker image build -t employee-producer .
2.	docker run -p 8080:8080 -d employee-producer
3.	docker exec -it f46dc0cbaccc /bin/sh
4.	http://192.168.99.100:8080/employee


 
 ********************
 
 The docker run doc does mention:

The docker run command first creates a writeable container layer over the specified image, and then starts it using the specified command.

That is, docker run is equivalent to the API /containers/create then /containers/(id)/start.

Run: create a new container of an image, and execute the container. You can create N clones of the same image. The command is: docker run IMAGE_ID and not docker run CONTAINER_ID

Start: Launch a container previously stopped. For example, if you had stopped a database with the command docker stop CONTAINER_ID, you can relaunch the same container with the command docker start CONTAINER_ID, and the data and settings will be the same.

********************
