Angular
1. main.ts
 bootStrapModule(ModuleName)->It loads here
 2. app.module.ts
 export class ModuleName

constructor(){
     //called first time before the ngOnInit()
  }

  ngOnInit(){
     //called after the constructor and called  after the first ngOnChanges() 
  }
  
  2. Import external css
   add css in angular.css in style array
   place the css in src/assets


 Very frequently we need to share data between components. There are various ways to share data between Angular components. These are:

Using @Input()
Using @Output()
Using Services
Parent component calling ViewChild
Parent interacting with a child using a local variable
Using Observable and Subject


****************
navigateByUrl is similar to changing the location bar directly–we are providing the “whole” new URL. Whereas router. navigate creates a new URL by applying an array of passed-in commands, a patch, to the current URL.


queryParametes and optional parameters are not configured in the route configuration
ActivatedRoute  vs ActivatedRouteSnapshot 

Use the Snapshot if you only need the initial value of the parameter once during the component's initialization, and don't expect the URL to change while the user is still on that same component

description

The Constructor is a default method of the class that is executed when the class is instantiated and ensures proper initialisation of fields in the class and its subclasses. Angular, or better Dependency Injector (DI), analyses the constructor parameters and when it creates a new instance by calling new MyClass() it tries to find providers that match the types of the constructor parameters, resolves them and passes them to the constructor like

new MyClass(someArg);
ngOnInit is a life cycle hook called by Angular to indicate that Angular is done creating the component.

export class App implements OnInit {
  constructor() {
     // Called first time before the ngOnInit()
  }

  ngOnInit() {
     // Called after the constructor and called  after the first ngOnChanges() 
  }
}
https://stackoverflow.com/questions/35763730/difference-between-constructor-and-ngoninit

*****************************

@Input decorator. @Input links a property of a component (which is generally the child component) with a value that was given by another component (the parent).
On the other side, the @Output decorator is used to link a property of a child component and emit it through the event emitter. So the parent component can call the property and get the data emitted from it.
To summarise: @Input is used to pass data from parent to child and the opposite, @Output, can be used when you want to pass data from the child to the parent (which can also be done with observables or simple functions)

https://codeburst.io/angular-interview-question-what-are-ng-container-ng-content-and-ng-template-9fafbbc255d5

https://codeburst.io/primary-and-secondary-angular-router-outlets-5b065bcdb399
